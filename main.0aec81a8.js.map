{"version":3,"sources":["scripts/main.js"],"names":["balanceEl","document","querySelector","moneyPlusEl","moneyMinusEl","listEl","formEl","textEl","amountEl","addEventListener","addTransaction","localStorageTransactions","JSON","parse","localStorage","getItem","transactions","addTransactionToDOM","transaction","sign","amount","item","createElement","classList","add","innerHTML","text","Math","abs","id","appendChild","event","preventDefault","value","trim","alert","generateID","Number","push","updateValues","clearValue","updateLocalStorage","floor","random","amounts","map","total","reduce","acc","toFixed","income","filter","expense","textContent","removeTransaction","init","setItem","stringify","forEach","itemValue"],"mappings":";AAAA,aAEA,IAAMA,EAAYC,SAASC,cAAc,YACnCC,EAAcF,SAASC,cAAc,eACrCE,EAAeH,SAASC,cAAc,gBACtCG,EAASJ,SAASC,cAAc,SAChCI,EAASL,SAASC,cAAc,SAChCK,EAASN,SAASC,cAAc,SAChCM,EAAWP,SAASC,cAAc,WAExCI,EAAOG,iBAAiB,SAAUC,GAElC,IAAMC,EAEJC,KAAKC,MAAMC,aAAaC,QAAQ,iBAI9BC,EAAwD,OAAzCF,aAAaC,QAAQ,gBACpCJ,EACA,GAEJ,SAASM,EAAoBC,GACrBC,IAAAA,EAAOD,EAAYE,OAAS,EAAI,IAAM,IACtCC,EAAOpB,SAASqB,cAAc,MAEpCD,EAAKE,UAAUC,IAAIN,EAAYE,OAAS,EAAI,QAAU,QAEtDC,EAAKI,UAAeP,GAAAA,OAAAA,EAAYQ,KACtBP,gBAAAA,OAAAA,GAAOQ,OAAAA,KAAKC,IAAIV,EAAYE,QAEhCF,+EAAAA,OAAAA,EAAYW,GAHlB,2BAOAxB,EAAOyB,YAAYT,GAGrB,SAASX,EAAeqB,GAGlBxB,GAFJwB,EAAMC,iBAEsB,KAAxBzB,EAAO0B,MAAMC,QAA2C,KAA1B1B,EAASyB,MAAMC,OAE/CC,MAAM,oCACD,CACCjB,IAAAA,EAAc,CAClBW,GAAIO,IACJV,KAAMnB,EAAO0B,MACbb,OAAQiB,OAAO7B,EAASyB,QAG1BjB,EAAasB,KAAKpB,GAElBD,EAAoBC,GACpBqB,IACAC,EAAWjC,GACXiC,EAAWhC,GACXiC,KAIJ,SAASL,IACAT,OAAAA,KAAKe,MAAsB,IAAhBf,KAAKgB,UAGzB,SAASJ,IACDK,IAAAA,EAAU5B,EAAa6B,IAAI,SAAC3B,GAAgBA,OAAAA,EAAYE,SACxD0B,EAAQF,EACXG,OAAO,SAACC,EAAK3B,GAAU2B,OAAAA,EAAM3B,GAAO,GAAG4B,QAAQ,GAE5CC,EAASN,EAAQO,OAAO,SAAC9B,GAAUA,OAAAA,EAAO,IAC7C0B,OAAO,SAACC,EAAK3B,GAAU2B,OAAAA,EAAM3B,GAAO,GACpC4B,QAAQ,GAELG,EAAUzB,KAAKC,IAAIgB,EAAQO,OAAO,SAAC9B,GAAUA,OAAAA,EAAO,IACvD0B,OAAO,SAACC,EAAK3B,GAAU2B,OAAAA,EAAM3B,GAAO,IACpC4B,QAAQ,GAEXjD,EAAUqD,YAAkBP,IAAAA,OAAAA,GAC5B3C,EAAYkD,YAAkBH,IAAAA,OAAAA,GAC9B9C,EAAaiD,YAAkBD,IAAAA,OAAAA,GAIjC,SAASE,EAAkBzB,GACzBb,EAAeA,EAAamC,OAAO,SAACjC,GAAgBA,OAAAA,EAAYW,KAAOA,IACvEY,IACAc,IAGF,SAASd,IAEP3B,aAAa0C,QAAQ,eAAgB5C,KAAK6C,UAAUzC,IAGtD,SAASuC,IACPlD,EAAOoB,UAAY,GACnBT,EAAa0C,QAASzC,GACtBsB,IAGF,SAASC,EAAWmB,GAClBA,EAAU1B,MAAQ,GAGpBsB","file":"main.0aec81a8.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst balanceEl = document.querySelector('#balance');\nconst moneyPlusEl = document.querySelector('#money-plus');\nconst moneyMinusEl = document.querySelector('#money-minus');\nconst listEl = document.querySelector('#list');\nconst formEl = document.querySelector('#form');\nconst textEl = document.querySelector('#text');\nconst amountEl = document.querySelector('#amount');\n\nformEl.addEventListener('submit', addTransaction);\n\nconst localStorageTransactions = (\n  // eslint-disable-next-line no-undef\n  JSON.parse(localStorage.getItem('transactions'))\n);\n\n// eslint-disable-next-line no-undef\nlet transactions = localStorage.getItem('transactions') !== null\n  ? localStorageTransactions\n  : [];\n\nfunction addTransactionToDOM(transaction) {\n  const sign = transaction.amount < 0 ? '-' : '+';\n  const item = document.createElement('li');\n\n  item.classList.add(transaction.amount < 0 ? 'minus' : 'plus');\n\n  item.innerHTML = `${transaction.text}\n    <span>${sign}${Math.abs(transaction.amount)}</span>\n    <button class=\"delete-btn\" onclick=\"removeTransaction(\n      ${transaction.id}\n    )\">X</button>\n  `;\n\n  listEl.appendChild(item);\n}\n\nfunction addTransaction(event) {\n  event.preventDefault();\n\n  if (textEl.value.trim() === '' || amountEl.value.trim() === '') {\n    // eslint-disable-next-line no-undef\n    alert('Please add a Text and Amount');\n  } else {\n    const transaction = {\n      id: generateID(),\n      text: textEl.value,\n      amount: Number(amountEl.value),\n    };\n\n    transactions.push(transaction);\n\n    addTransactionToDOM(transaction);\n    updateValues();\n    clearValue(textEl);\n    clearValue(amountEl);\n    updateLocalStorage();\n  }\n}\n\nfunction generateID() {\n  return Math.floor(Math.random() * 1000000000);\n}\n\nfunction updateValues() {\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts\n    .reduce((acc, item) => (acc + item), 0).toFixed(2);\n\n  const income = amounts.filter((item) => (item > 0))\n    .reduce((acc, item) => (acc + item), 0)\n    .toFixed(2);\n\n  const expense = Math.abs(amounts.filter((item) => (item < 0))\n    .reduce((acc, item) => (acc + item), 0))\n    .toFixed(2);\n\n  balanceEl.textContent = `$${total}`;\n  moneyPlusEl.textContent = `$${income}`;\n  moneyMinusEl.textContent = `$${expense}`;\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction removeTransaction(id) {\n  transactions = transactions.filter((transaction) => transaction.id !== id);\n  updateLocalStorage();\n  init();\n}\n\nfunction updateLocalStorage() {\n  // eslint-disable-next-line no-undef\n  localStorage.setItem('transactions', JSON.stringify(transactions));\n}\n\nfunction init() {\n  listEl.innerHTML = '';\n  transactions.forEach((addTransactionToDOM));\n  updateValues();\n}\n\nfunction clearValue(itemValue) {\n  itemValue.value = '';\n}\n\ninit();\n"]}